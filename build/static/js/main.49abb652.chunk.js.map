{"version":3,"sources":["components/form.js","components/todo.js","components/Todolist.js","App.js","index.js"],"names":["Form","setInputText","todos","setStatus","setTodos","inputText","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAuCeA,EArCF,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,aAAcC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAkBrD,OACI,iCACI,uBAAOC,MAAOD,EAAWE,SAnBR,SAACC,GAEtBP,EAAaO,EAAEC,OAAOH,QAiBmCI,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAhBU,SAACJ,GACvBA,EAAEK,iBACFT,EAAS,GAAD,mBACDF,GADC,CACM,CAAEY,KAAMT,EAAWU,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAE5DjB,EAAa,KAW2BU,UAAU,cAAcD,KAAK,SAAjE,SACI,mBAAGC,UAAU,yBAEjB,qBAAKA,UAAU,SAAf,SACI,yBAAQJ,SAZA,SAACC,GAEjBL,EAAUK,EAAEC,OAAOH,QAUsBa,KAAK,QAAQR,UAAU,cAAxD,UACI,wBAAQL,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,aAAd,iC,OCJLc,EAxBF,SAAC,GAAqC,IAAnCN,EAAkC,EAAlCA,KAAMZ,EAA4B,EAA5BA,MAAOmB,EAAqB,EAArBA,KAAMjB,EAAe,EAAfA,SAgB/B,OACI,sBAAKO,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAY,IAAzD,SAAgED,IAChE,wBAAQF,QAfQ,WACpBR,EAASF,EAAMoB,KAAI,SAAAC,GACf,OAAIA,EAAKP,KAAOK,EAAKL,GACjB,2BACOO,GADP,IACYR,WAAYQ,EAAKR,YAG1BQ,OAQ2BZ,UAAU,eAA5C,SAA4D,mBAAGA,UAAU,mBACzE,wBAAQC,QAnBM,WAClBR,EAASF,EAAMsB,QAAO,SAAAC,GAAE,OAAIA,EAAGT,KAAOK,EAAKL,QAkBPL,UAAU,YAA1C,SAAsD,mBAAGA,UAAU,uBCNhEe,EAZE,SAAC,GAAwC,IAAtCxB,EAAqC,EAArCA,MAAOE,EAA8B,EAA9BA,SAAUuB,EAAoB,EAApBA,cAEjC,OACI,qBAAKhB,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKgB,EAAcL,KAAI,SAAAD,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,EAAMP,KAAMO,EAAKP,KAAMZ,MAAOA,EAAOE,SAAUA,GAA9DiB,EAAKL,YCqCrBY,MAxCf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOxB,EAAP,KAAkBJ,EAAlB,KACA,EAA0B4B,mBAAS,IAAnC,mBAAO3B,EAAP,KAAcE,EAAd,KACA,EAA4ByB,mBAAS,OAArC,mBAAOC,EAAP,KAAe3B,EAAf,KACA,EAA0C0B,mBAAS,IAAnD,mBAAOF,EAAP,KAAsBI,EAAtB,KAEAC,qBAAU,WACRC,MACC,CAAC/B,EAAO4B,IAEX,IAAMG,EAAgB,WACpB,OAAQH,GACN,IAAK,YACHC,EAAiB7B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,IAAK,aACHgB,EAAiB7B,EAAMsB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,QACEgB,EAAiB7B,KAMvB,OAEE,qBAAKS,UAAU,MAAf,SACE,mCAAQ,sCAAQ,sBAAMK,GAAG,KAAT,qBACd,cAAC,EAAD,CAAMd,MAAOA,EAAQC,UAAWA,EAAWE,UAAWA,EAAWD,SAAUA,EAAUH,aAAcA,IACnG,cAAC,EAAD,CAAUC,MAAOA,EAAOyB,cAAeA,EAAevB,SAAUA,UChCxE8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.49abb652.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({ setInputText, todos,setStatus, setTodos, inputText }) => {\r\n    const inputTextHandler = (e) => {\r\n       \r\n        setInputText(e.target.value)\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault()\r\n        setTodos([\r\n            ...todos, { text: inputText, completed: false, id: Math.random() * 1000 }\r\n        ])\r\n        setInputText('')\r\n\r\n    }\r\n    const statusHandler=(e)=>{\r\n    \r\n        setStatus(e.target.value)\r\n\r\n    }\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type='text' className='todo-input' />\r\n            <button onClick={submitTodoHandler} className='todo-button' type='submit'>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className='select'>\r\n                <select onChange={statusHandler} name='todos' className='filter-todo'>\r\n                    <option value='all'>All</option>\r\n                    <option value='completed'>Completed</option>\r\n                    <option value='incomplete'>Incomplete</option>\r\n                </select>\r\n            </div>\r\n\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\nexport default Form;","import React from 'react'\r\n\r\nconst Todo = ({ text, todos, todo, setTodos }) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id))\r\n    }\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if (item.id === todo.id){\r\n                return{\r\n                    ...item,completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n\r\n    }))\r\n}\r\n\r\n    return (\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed ? 'completed':''}`}>{text}</li>\r\n            <button onClick={completeHandler} className='complete-btn' ><i className='fas fa-check'></i></button>\r\n            <button onClick={deleteHandler} className='trash-btn'><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    )\r\n}\r\nexport default Todo;","import React from 'react'\r\nimport Todo from './todo'\r\n\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n\r\n    return (\r\n        <div className='todo-container'>\r\n            <ul className='todo-list'>\r\n                {filteredTodos.map(todo => (\r\n                    <Todo key={todo.id} todo={todo} text={todo.text} todos={todos} setTodos={setTodos} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default TodoList","\nimport './App.css';\nimport Form from './components/form'\nimport TodoList from './components/Todolist';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction App() {\n\n  const [inputText, setInputText] = useState('')\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState('all')\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break\n      case 'incomplete':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break\n      default:\n        setFilteredTodos(todos)\n        break\n\n\n    }\n  }\n  return (\n\n    <div className=\"App\">\n      <header><h1>Todo<span id='op'>List</span></h1>\n        <Form todos={todos}  setStatus={setStatus} inputText={inputText} setTodos={setTodos} setInputText={setInputText} />\n        <TodoList todos={todos} filteredTodos={filteredTodos} setTodos={setTodos} />\n\n      </header>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}